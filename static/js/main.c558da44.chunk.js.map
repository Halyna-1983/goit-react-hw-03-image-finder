{"version":3,"sources":["Components/Searchbar/Searchbar.js","services/pictures-api.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","ImageGalleryItem","url","alt","onClick","src","onOclick","ImageGallery","pictures","map","id","webformatURL","largeImageURL","tags","LoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","showModal","isLoading","onChangeQuery","fetchPictures","options","api","picturesData","prevState","catch","error","console","log","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","img","prevProps","onPicClick","length","Loader","width","height","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c558da44.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ query: event.currentTarget.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault(); \r\n        this.props.onSubmit(this.state.query);\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n            <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                value={this.state.query}\r\n                onChange={this.handleChange}\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"/>\r\n            </form>\r\n        </header>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Searchbar;\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '21313289-b7c06230d54dda1d4d871d681';\r\n\r\nconst fetchPictures = ({\r\n    searchQuery = '',\r\n    currentPage = 1,\r\n    pageSize = 12\r\n\r\n    }) => {\r\n\r\n    return axios.get(\r\n        `https://pixabay.com/api/?key=${API_KEY}&q=${searchQuery}&image_type=photo&pretty=true&page=${currentPage}&per_page=${pageSize}`,)\r\n        .then(response => response.data.hits);        \r\n};\r\n\r\nexport default {fetchPictures};","import React from 'react';\r\n\r\n\r\nconst ImageGalleryItem = ({url, alt, onClick }) => {\r\n    return ( \r\n        <img \r\n        src={url} \r\n        alt={alt} \r\n        onOclick={onClick} className=\"ImageGalleryItem-image\" />\r\n     );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\n","import React from 'react'; \r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pictures, onClick }) => {\r\n    return ( \r\n        <ul className=\"ImageGallery\">\r\n            {pictures.map(({id, webformatURL, largeImageURL, tags}) => (\r\n\t\t\t<li className=\"ImageGalleryItem\" key={id}>\r\n\t\t\t\t<ImageGalleryItem \r\n                url = {webformatURL} \r\n                alt = {tags}\r\n                onClick = {() => onClick(largeImageURL, tags)}/>\r\n\t\t\t</li>\r\n\t\t))}\r\n        </ul>\r\n    )\r\n}\r\n \r\nexport default ImageGallery;","import React from 'react';\r\n\r\nconst LoadMore = ({onClick}) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick} className=\"Button\">Load more </button>\r\n    )\r\n}\r\nexport default LoadMore;","// При клике по элементу галереи должно открываться модальное окно с темным оверлеем и \r\n// отображаться большая версия изображения. Модальное окно должно закрываться по нажатию \r\n// клавиши ESC или по клику на оверлее.\r\n\r\n// Внешний вид похож на функционал этого VanillaJS-плагина, только вместо белого модального \r\n// окна рендерится изображение (в примере нажми Run). Анимацию делать не нужно!\r\n\r\nimport React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n   };\r\n\r\n   handleKeyDown = e => {\r\n    if(e.code === 'Escape') {\r\n        this.props.onClose();\r\n        }\r\n   };\r\n\r\n   handleBackdropClick = event => {\r\n       if(event.currentTarget === event.target) {\r\n           this.props.onClose();\r\n       };\r\n   };\r\n\r\nrender() {\r\n    const {url, alt} = this.props\r\n    return createPortal(\r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n            <div className=\"Modal\">\r\n                 <img src={url} alt={alt} />\r\n             </div>\r\n        </div>, \r\n        modalRoot,\r\n    )\r\n};\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport './index.css';\nimport Searchbar from './Components/Searchbar';\nimport api from './services/pictures-api';\nimport ImageGallery from './Components/ImageGallery';\nimport Loader from './Components/Loader';\nimport Modal from './Components/Modal';\n\nclass App extends Component {\n  state = { \n    searchQuery: '',\n    pictures: [],\n    currentPage: 1,\n    showModal: false,\n    largeImageURL: '',\n    isLoading: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    };\n  };\n\n  onChangeQuery = query => {\n      this.setState({\n        searchQuery: query,\n        currentPage: 1,\n        pictures: [],\n      })\n  };\n\n  fetchPictures = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    api\n      .fetchPictures(options)\n      .then(picturesData => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...picturesData],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        this.setState({ isLoading: false });\n        if (this.state.currentPage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        };\n      });\n  };\n  \n  toggleModal = (img) => {\n    this.setState(({ showModal, tags }) => ({\n      showModal: !showModal,\n      largeImageURL: img,\n      tags: tags,\n    }))\n  }\n\n  render() { \n    const { pictures, showModal, largeImageURL, tags } = this.state;\n   \n    return (\n    <div className=\"App\">\n\n      <Searchbar onSubmit={this.onChangeQuery} />\n\n      <ImageGallery pictures ={pictures} onPicClick={this.toggleModal} />\n\n      {this.state.pictures.length !== 0 && !this.state.isLoading && (\n          <Loader onClick={this.fetchPictures} />\n        )}\n       \n        {showModal && (\n          <Modal url={largeImageURL} alt={tags} onClose={this.toggleModal}>\n            <img\n              width=\"100%\"\n              height=\"100%\"\n              src={this.state.largeImageURL}\n              alt={this.state.tags}\n            />\n          </Modal> \n      )}\n    </div>\n    );\n  }\n}\n \nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}