{"version":3,"sources":["Components/Searchbar/Searchbar.js","services/pictures-api.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","ImageGalleryItem","url","alt","onClick","src","onOclick","ImageGallery","pictures","map","id","webformatURL","largeImageURL","tags","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","error","showModal","largeImg","largeImgTags","isLoading","fetchLength","onChangeQuery","fetchPictures","options","api","prevState","length","catch","finally","onPicClick","toggleModal","prevProps","shouldRenderLoadMoreButton","color","fetchPics","style","textAlign","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.165531f2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ query: event.currentTarget.value });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault(); \r\n        this.props.onSubmit(this.state.query);\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n            <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                value={this.state.query}\r\n                onChange={this.handleChange}\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"/>\r\n            </form>\r\n        </header>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Searchbar;\r\n\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = '21313289-b7c06230d54dda1d4d871d681';\r\n\r\n// https://pixabay.com/api/?key=21313289-b7c06230d54dda1d4d871d681&q=yellow+flowers&image_type=photo&pretty=true\r\n\r\nconst fetchPictures = ({\r\n    searchQuery = '',\r\n    currentPage = 1,\r\n    pageSize = 12\r\n\r\n    }) => {\r\n\r\n    // const { currentPage } = this.state;\r\n\r\n    return axios.get(\r\n        `https://pixabay.com/api/?key=${API_KEY}&q=${searchQuery}&image_type=photo&pretty=true&page=${currentPage}&per_page=${pageSize}`,)\r\n        .then(response => response.data.hits);        \r\n};\r\n\r\nexport default {fetchPictures};","// import { checkPropTypes } from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({url, alt, onClick }) => {\r\n    return ( \r\n        <img \r\n        src={url} \r\n        alt={alt} \r\n        onOclick={onClick} className=\"ImageGalleryItem-image\" />\r\n     );\r\n}\r\n\r\n// checkPropTypes\r\n \r\nexport default ImageGalleryItem;\r\n\r\n","import ImageGalleryItem from '../ImageGalleryItem'\r\n\r\nconst ImageGallery = ({ pictures, onClick }) => {\r\n    return ( \r\n        <ul className=\"ImageGallery\">\r\n            {pictures.map(({id, webformatURL, largeImageURL, tags}) => (\r\n\t\t\t<li className=\"ImageGalleryItem\" key={id}>\r\n\t\t\t\t<ImageGalleryItem \r\n                url = {webformatURL} \r\n                alt = {tags}\r\n                onClick = {() => onClick(largeImageURL, tags)}/>\r\n\t\t\t</li>\r\n\t\t))}\r\n        </ul>\r\n    )\r\n}\r\n\r\n \r\nexport default ImageGallery;","// При клике по элементу галереи должно открываться модальное окно с темным оверлеем и \r\n// отображаться большая версия изображения. Модальное окно должно закрываться по нажатию \r\n// клавиши ESC или по клику на оверлее.\r\n\r\n// Внешний вид похож на функционал этого VanillaJS-плагина, только вместо белого модального \r\n// окна рендерится изображение (в примере нажми Run). Анимацию делать не нужно!\r\n\r\nimport React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount() {\r\n    //    console.log(Modal componentDidMount()); \r\n\r\n       window.addEventListener('keydown', this.handleKeyDown)\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // console.log(Modal componentDidUpdate());\r\n\r\n        window.removeEventListener('keydown', this.handleKeyDown)\r\n   };\r\n\r\n   handleKeyDown = e => {\r\n    if(e.code === 'Escape') {\r\n        console.log('pressed escape');\r\n\r\n        this.props.onClose();\r\n        }\r\n   };\r\n\r\n   handleBackdropClick = event => {\r\n       if(event.currentTarget === event.target) {\r\n           this.props.onClose();\r\n       };\r\n   };\r\n\r\nrender() {\r\n    const {url, alt} = this.props\r\n    return createPortal(\r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n            <div className=\"Modal\">\r\n                 <img src={url} alt={alt} />\r\n             </div>\r\n        </div>, \r\n        modalRoot,\r\n    )\r\n};\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport './index.css';\nimport Searchbar from './Components/Searchbar';\nimport api from './services/pictures-api';\nimport ImageGallery from './Components/ImageGallery';\n// import Button from './Components/Button/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\n\nclass App extends Component {\n  state = { \n    searchQuery: '',\n    pictures: [],\n    currentPage: 1,\n    error: null,\n    showModal: false,\n    largeImg: '',\n    largeImgTags: '',\n    isLoading: false,\n    fetchLength: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    };\n\n    if (this.state.currentPage > 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    };\n  };\n\n  onChangeQuery = query => {\n      this.setState({\n        searchQuery: query,\n        currentPage: 1,\n        pictures: [],\n        error: null,\n      })\n  };\n\n  fetchPictures = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    api\n      .fetchPictures(options)\n      .then(pictures => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...pictures],\n          currentPage: prevState.currentPage + 1,\n          fetchLength: pictures.length,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n  \n  onPicClick = (pictures, tags) => {\n    this.setState({ showModal: true, largeImg: pictures, largeImgTags: tags });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchPictures();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal\n    }))\n  }\n\n  // onChangeQuery = query => {\n  //   this.setState({ searchQuery : query });\n  // };\n\n  // fetchPictures = () => {\n  //   api.fetchPictures(this.state.searchQuery, this.state.currentPage)\n  //   .then( picturesData => this.setState({ pictures: picturesData })\n  //   );\n  // }\n\n  render() { \n    const { searchQuery, pictures, showModal, isLoading, error, fetchLength, largeImg, largeImgTags } = this.state;\n    const shouldRenderLoadMoreButton = pictures.length > 0 && fetchLength === 12 && !isLoading;\n\n    return (\n    <div className=\"App\">\n\n      <Searchbar onSubmit={this.onChangeQuery} />\n\n      <ImageGallery pictures ={pictures} onPicClick={this.onPicClick} />\n\n      {isLoading && (\n          <Loader className=\"Loader\" color=\"#3f51b5\" type=\"ThreeDots\" />\n        )}\n        {shouldRenderLoadMoreButton && (\n          <button type=\"button\" className=\"Button\" onClick={this.fetchPics}>\n            Load more\n          </button>\n        )}\n\n        {error && (\n          <p style={{ textAlign: 'center' }}>\n            Something went wrong. Please try again.\n          </p>\n        )}\n\n        {showModal && (<Modal url={largeImg} alt={largeImgTags} onClose={this.toggleModal} />\n      )}\n    </div>\n    );\n  }\n}\n \nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}